# Sample workflow thata runs tests and uploads to PyPI
# IMPORTANT: update line 57 with all the tasks that must succeed before uploading to PyPI
# IMPORTANT: store the PyPI token as PYPI_API_TOKEN as a GitHub secret
# IMPORTANT: update line 11 with the name of your main branch
name: CI

on:
  push:
    # prevent CI duplicated jobs in PRs
    branches:
      - main # TODO: or master!
      - 'dev/**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:



jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install pytest

      - name: Test
        run: |
          pytest

  # pkgmt check verifies the project version and CHANGELOG.md
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'pkgmt>=0.1.1'
      - name: Check project
        run: |
          pkgmt check

  release:
    # TODO: ADD ALL JOBS THAT MUST SUCCEED BEFORE RELEASING!
    needs: [test, check]
    if: startsWith(github.ref, 'refs/tags') && github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install pkgmt twine wheel --upgrade

      - name: Upload
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TAG: ${{  github.ref_name }}
        run: |
          echo "tag is $TAG"
          pkgmt release $TAG --production --yes
